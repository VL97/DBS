--Practice--

--views
CREATE VIEW VRS AS
SELECT INGREDIENTID,NAME,INVENTORY,INVENTORY*UNITPRICE AS "VALUE" FROM INGREDIENTS I,VENDORS V
WHERE I.VENDORID=V.VENDORID AND COMPANYNAME='VEGGIES_R_US';

SELECT * FROM VRS;

SELECT NAME FROM VRS
WHERE INVENTORY>100; --or

SELECT NAME FROM INGREDIENTS I,VENDORS V
WHERE I.VENDORID=V.VENDORID
AND COMPANYNAME='VEGGIES_R_US' AND INVENTORY>100;

--changing base tables changes the view also
UPDATE INGREDIENTS
SET INVENTORY=INVENTORY*2
WHERE INGREDIENTID='TOMTO';

SELECT * FROM VRS;

CREATE VIEW MENU AS
(SELECT M.MEALID AS "MENUITEM",M.NAME,SUM(PRICE*(1-DISCOUNT)) AS "PRICE"
FROM MEALS M LEFT JOIN PARTOF P ON M.MEALID=P.MEALID LEFT JOIN ITEMS I ON I.ITEMID=P.ITEMID
GROUP BY M.MEALID,M.NAME)
UNION
(SELECT ITEMID,NAME,PRICE FROM ITEMS);

SELECT * FROM MENU;

SELECT NAME FROM MENU
WHERE PRICE = (SELECT MAX(PRICE) FROM MENU);

SELECT NAME FROM MENU
WHERE PRICE IS NULL;

UPDATE VRS
SET INVENTORY=INVENTORY*2;

SELECT * FROM VRS;

INSERT INTO VRS(INGREDIENTID,NAME,INVENTORY)
VALUES('NEWIN','NEW INGREDIENT',100);

SELECT * FROM VRS;

--alter a view
ALTER VIEW VRS AS
SELECT INGREDIENTID,NAME,INVENTORY,INVENTORY*UNITPRICE AS "VALUE" FROM INGREDIENTS I JOIN VENDORS V ON I.VENDORID=V.VENDORID
WHERE COMPANYNAME='SPRING WATER SUPPLY';

--drop a view
DROP VIEW VRS;

--Exercise--
--1
CREATE VIEW RS_VIEW AS
SELECT W.EMPLOYEEID,E.FIRSTNAME,E.LASTNAME,W.PROJECTID,(W.ASSIGNEDTIME/(SELECT SUM(ASSIGNEDTIME) FROM WORKSON W2 WHERE W2.EMPLOYEEID=W.EMPLOYEEID)) AS "ASSIGNEDTIME" FROM EMPLOYEES E,WORKSON W,PROJECTS P
WHERE E.EMPLOYEEID=W.EMPLOYEEID AND W.PROJECTID=P.PROJECTID
AND P.DESCRIPTION='ROBOTIC SPOUSE';

SELECT * FROM RS_VIEW;

DROP VIEW RS_VIEW;

--2
SELECT FIRSTNAME,LASTNAME FROM RS_VIEW
WHERE ASSIGNEDTIME=(SELECT MAX(ASSIGNEDTIME) FROM RS_VIEW);

--3
CREATE VIEW V_EMP_DEPT AS
SELECT E.EMPLOYEEID,FIRSTNAME,LASTNAME,D.NAME,SALARY FROM EMPLOYEES E,DEPARTMENTS D
WHERE E.DEPTCODE=D.CODE;

SELECT * FROM V_EMP_DEPT;

DROP VIEW V_EMP_DEPT;

--4
SELECT FIRSTNAME,LASTNAME FROM V_EMP_DEPT
WHERE NAME='CONSULTING';

--5
CREATE VIEW V_AA AS
SELECT P.PROJECTID,P.DEPTCODE,DESCRIPTION,STARTDATE,ENDDATE,REVENUE,W.ASSIGNEDTIME,(W.ASSIGNEDTIME/(SELECT SUM(ASSIGNEDTIME) FROM WORKSON W2 WHERE W2.EMPLOYEEID=W.EMPLOYEEID)) AS "%TIME" FROM PROJECTS P,WORKSON W,EMPLOYEES E
WHERE P.PROJECTID=W.PROJECTID AND W.EMPLOYEEID=E.EMPLOYEEID
AND E.FIRSTNAME='ABE' AND E.LASTNAME='ADVICE';

SELECT * FROM V_AA;

DROP VIEW V_AA;

--6
SELECT SUM(ASSIGNEDTIME) FROM V_AA;

--7
CREATE VIEW V_EMP AS
SELECT FIRSTNAME+' '+LASTNAME AS "NAME",SALARY FROM EMPLOYEES;

SELECT * FROM V_EMP;

UPDATE V_EMP
SET SALARY=SALARY*1.10;

--Practice--
--derived attributes
--numeric
SELECT INGREDIENTID, INVENTORY*2*UNITPRICE AS "INVENTORY VALUE" FROM INGREDIENTS
WHERE NAME='PICKLE';

SELECT 5-4+8/4*2 AS "EXAMPLE_EQN" FROM VENDORS
WHERE REFERREDBY IS NOT NULL;

SELECT NAME,INVENTORY*UNITPRICE AS "DOLLARS",CEILING(INVENTORY*UNITPRICE*1.2552) AS "EUROS",1.2552 AS "EXCHANGE_RATE" FROM INGREDIENTS;

--character strings
SELECT MANAGER,ADDRESS+' '+CITY+' '+STATE+' '+ZIP+' USA' AS "MAIL" FROM STORES;

SELECT SUBSTRING(REPFNAME,1,1)+'.'+REPLNAME AS "NAME" FROM VENDORS;

SELECT RTRIM(LTRIM(' WORD ')) AS "ANSWER";

SELECT UPPER(REPFNAME+' '+REPLNAME) AS "REP",LOWER(COMPANYNAME) AS COMPANY FROM VENDORS
WHERE REFERREDBY='VGRUS';

--position
SELECT NAME,CHARINDEX('SALAD',NAME) FROM ITEMS;

--character length
SELECT NAME,LEN(NAME) AS "NAMELEN",LEN(FOODGROUP) AS "FGLEN" FROM INGREDIENTS;

--right/left+replicate
SELECT RIGHT(REPLICATE('_',5)+'ABC',5);

--replace
SELECT REPLACE(REPLACE('UNIT NUMBER#2','#','_'),' ','_');

--temporal
SELECT GETDATE();

SELECT CONVERT(VARCHAR(10),GETDATE(),101) AS "[MM/DD/YYYY]";

SELECT NAME,DATEADDED,DATEDIFF(DAY,DATEADDED,'2005-01-02') AS "DAYS_ON_MENU" FROM ITEMS; 

SELECT NAME,DATEPART(YEAR,DATEADDED) AS "YEAR",DATEPART(MONTH,DATEADDED) AS MONTH FROM ITEMS; --or

SELECT NAME,YEAR(DATEADDED) AS "YEAR",MONTH(DATEADDED) AS "MONTH" FROM ITEMS;

--2 days before current date
SELECT GETDATE()-2;

--date add
SELECT DATEADD(MONTH,3,GETDATE());